version: "3.9"
services:
  app:
    build: .
    container_name: flightreservation_app
    ports:
      - "8081:8081"       # Exponiendo la aplicación en el puerto 8081
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/vuelo_db
      - SPRING_DATASOURCE_USERNAME=vuelo_user
      - SPRING_DATASOURCE_PASSWORD=tu_contraseña
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.PostgreSQLDialect
      # Usamos la propiedad de Kafka de Spring Boot para evitar advertencias
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_TOPIC_RESERVATIONS=reservations-topic
    depends_on:
      - postgres
      - kafka

  postgres:
    image: postgres:15
    container_name: flightreservation_postgres
    environment:
      POSTGRES_DB: vuelo_db
      POSTGRES_USER: vuelo_user
      POSTGRES_PASSWORD: tu_contraseña
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: flightreservation_zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: flightreservation_kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

volumes:
  postgres_data:
