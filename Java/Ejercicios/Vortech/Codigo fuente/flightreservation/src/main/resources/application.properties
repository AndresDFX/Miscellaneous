spring.application.name=flightreservation
server.port=8081


# Nota: La URL de conexión se construirá a partir de la variable de entorno SPRING_DATASOURCE_URL
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/vuelo_db}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:vuelo_user}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:tu_contraseña}
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO:update}
spring.jpa.properties.hibernate.dialect=${SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT:org.hibernate.dialect.PostgreSQLDialect}

# Kafka properties: Si usas la propiedad personalizada, puedes seguir usándola o bien migrar a la propiedad de Spring Boot
# Aquí se usa la variable de entorno para bootstrap servers
kafka.bootstrapAddress=${SPRING_KAFKA_BOOTSTRAP_SERVERS:kafka:9092}
kafka.topic.reservations=${KAFKA_TOPIC_RESERVATIONS:reservations-topic}

spring.security.user.name=admin
spring.security.user.password=admin

# Configuración para Swagger/OpenAPI
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui/index.html

